package com.fon.client.forms;

import com.fon.client.controller.ClientController;
import com.fon.common.domain.Admin;
import com.fon.common.domain.SeminarSchedule;
import java.text.ParseException;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import com.fon.client.table.SeminarScheduleTableModel;
import com.fon.common.utils.Utility;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Aleksa
 */
public class ViewSeminarSchedulesForm extends javax.swing.JDialog {

    private final Admin loggedAdmin;
    private SeminarScheduleTableModel tableModel;

    /**
     * Creates new form SearchSeminarSchedules
     */
    public ViewSeminarSchedulesForm(java.awt.Frame parent, boolean modal, Admin loggedAdmin) {
        super(parent, modal);
        this.loggedAdmin = loggedAdmin;
        initComponents();
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnDetails = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtSearchSeminarName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        txtDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Форма за претрагу термина семинара");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Термин семинара");

        btnDetails.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDetails.setText("Подробности");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        jLabel4.setText("Претрага по називу семинара:");

        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("Претражи");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel5.setText("Претрага по датуму:");

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ML model data integration", "23.12.2023 | 10:00", "23.12.2023 | 18:00", "Факултет организационих наука", "2"}
            },
            new String [] {
                "Семинар", "Датум почетка", "Датум завршетка", "Локација", "Број учесника"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl);
        if (tbl.getColumnModel().getColumnCount() > 0) {
            tbl.getColumnModel().getColumn(1).setPreferredWidth(40);
            tbl.getColumnModel().getColumn(2).setPreferredWidth(40);
            tbl.getColumnModel().getColumn(4).setPreferredWidth(36);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSearchSeminarName, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(txtDate))
                        .addGap(42, 42, 42)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtSearchSeminarName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        try {
            int selectedRow = tbl.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(rootPane, "Морате изабрати термин семинара у табели да бисте видели подробности", "Грешка при одабиру термина семинара за подробности", JOptionPane.ERROR_MESSAGE);
                return;
            }

            SeminarSchedule seminarSchedule = tableModel.getSeminarSchedules().get(selectedRow);
            int seminarScheduleID = seminarSchedule.getSeminarScheduleID();

            seminarSchedule = ClientController.getInstance().getSeminarScheduleByID(seminarScheduleID);

            ChangeSeminarScheduleForm changeSeminarScheduleForm = new ChangeSeminarScheduleForm(null, true, loggedAdmin, seminarSchedule);
            changeSeminarScheduleForm.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(ViewSeminarSchedulesForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Систем не може учитати термин семинара", "Неуспешно учитавање термина семинара", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            String seminarName = txtSearchSeminarName.getText();
            Date dateSeminarSchedule = validateDateSeminarSchedule(txtDate.getText());
            List<Object> condition = new LinkedList();
            condition.add(seminarName);
            condition.add(dateSeminarSchedule);

            List<SeminarSchedule> filteredSeminarSchedules = ClientController.getInstance().getSeminarSchedulesByCondition(condition);
            tableModel.setSeminarSchedules(filteredSeminarSchedules);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Датум семинара за претрагу није у добром облику", "Грешка приликом валидације", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(ViewSeminarSchedulesForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Систем не може наћи термине семинара", "Неуспешно налажење термина семинара", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtSearchSeminarName;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        prepareTable();
    }

    private void prepareTable() {
        tableModel = new SeminarScheduleTableModel();
        tbl.setModel(tableModel);
    }

    private Date validateDateSeminarSchedule(String text) throws ParseException {
        Date dateSeminarSchedule = null;

        if (!Utility.isStringNullOrBlank(text)) {
            dateSeminarSchedule = Utility.DATE_FORMAT.parse(text);
        }
        return dateSeminarSchedule;
    }
}
